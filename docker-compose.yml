services:
  mysql:
    image: mysql:8.0
    container_name: demo_api_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: kelompok8
      MYSQL_DATABASE: demo_api
    expose:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-pkelompok8",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dokploy-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: demo_api_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: kelompok8
    expose:
      - "80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.rule=Host(`dbms.fuadfakhruz.id`)
      - traefik.http.routers.phpmyadmin.entrypoints=web,websecure
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80
      - traefik.http.routers.phpmyadmin.tls=true
      - traefik.http.routers.phpmyadmin.tls.certresolver=myresolver

  api:
    build:
      context: ./restapi-demo
      dockerfile: Dockerfile
    container_name: demo_api_node
    restart: always
    expose:
      - "5000"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=kelompok8
      - DB_NAME=demo_api
      - JWT_SECRET=kelompok8terbaik
      - PORT=5000
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`backend.fuadfakhruz.id`)
      - traefik.http.routers.api.entrypoints=web,websecure
      - traefik.http.services.api.loadbalancer.server.port=5000
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=myresolver

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: demo_api_frontend
    restart: always
    expose:
      - "3000"
    depends_on:
      - api
    environment:
      - NEXT_PUBLIC_API_URL=https://backend.fuadfakhruz.id
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`fuadfakhruz.id`)
      - traefik.http.routers.frontend.entrypoints=web,websecure
      - traefik.http.services.frontend.loadbalancer.server.port=3000
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=myresolver

networks:
  dokploy-network:
    external: true

volumes:
  mysql_data:
